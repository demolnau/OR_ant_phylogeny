clade_C_members_recreated<-unlist(recreated_tree$tip.label[clade_C_recreated[1]:clade_C_recreated[length(clade_C_recreated)]])
clade_C_members_recreated
zhou_zoom_C<-unlist(zhou_tree$tip.label[ant_clade_members[[3]][1]:ant_clade_members[[3]][length(ant_clade_members[[3]])]])
zhour_zoom_C
zhou_zoom_C
MRCAs_recreated[3]<-MRCA(recreated_tree,c(ant_clades$Clade_C[1],ant_clades$Clade_C[2]))
clade_C_recreated<-sort(get.terminals(MRCAs_recreated[3], recreated_tree))
clade_C_members_recreated<-unlist(recreated_tree$tip.label[clade_C_recreated[1]:clade_C_recreated[length(clade_C_recreated)]])
zhou_zoom_C<-unlist(zhou_tree$tip.label[ant_clade_members[[3]][1]:ant_clade_members[[3]][length(ant_clade_members[[3]])]])
zhou_zoom_C
clade_C_members_recreated
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
MRCA(recreated_tree,ant_clades[[1]])
MRCA(recreated_tree,ant_clades[[2]])
MRCA(recreated_tree,ant_clades[[3]])
MRCA(recreated_tree,ant_clades[[4]])
MRCA(recreated_tree,ant_clades[[5]])
MRCA(recreated_tree,ant_clades[[6]])
#ant_clade_members_recreated
"AmOr171" %in% recreated_tree$tip.label
"NvOr263" %in% recreated_tree$tip.label
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest)&(clade_list[[i]][2]%in% tree_of_interest)){
ant_clade_members[[i]]<-sort(clade_siblings(clade_list[[i]],tree_of_interest))
}
else{
print("need to manually add this clade")
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
"AmOr171" %in% recreated_tree$tip.label
"NvOr263" %in% recreated_tree$tip.label
View(ant_clade_members_recreated)
View(ant_clade_members_recreated)
View(ant_clade_members_recreated)
View(ant_clade_members)
View(ant_clade_members)
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
ant_clade_members[[i]]<-sort(clade_siblings(clade_list[[i]],tree_of_interest))
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
View(ant_clade_members)
knitr::opts_chunk$set(echo = TRUE)
library(Biostrings)
library(ggplot2)
library(ape)
library(phangorn)
library(rlang)
library(ggtree)
library(gridExtra)
#install.packages("devtools")
library(devtools)
#install_github("ajrominger/socorro")
library(socorro)
setwd("D:/Documents/BoxSync/Nason_Lab/OR/ants/OR_ant_phylogeny")
zhou_tree<-read.nexus("ant_OR_Zhou_nexus.txt", force.multi = FALSE)
recreated_tree<-read.nexus("remaking_the_phylogeny/first_iteration_tree/attempted_recreation_of_ant_tree_from_scratch_nexus.txt", force.multi = FALSE)
zhou_tree$edge.length[which(is.na(zhou_tree$edge.length))]=0
recreated_tree$edge.length[which(is.na(recreated_tree$edge.length))]=0
#which(is.na(recreated_tree$edge.length))
#which(recreated_tree$edge.length==0)
zhou_vis<-ggtree(zhou_tree, layout="circular") +
geom_tiplab(aes(angle=angle), size =1, color='blue') + labs(title="Zhou")
#zhou_vis
recreated_vis<-ggtree(recreated_tree, layout="circular") +
geom_tiplab(aes(angle=angle), size =1, color='blue') +labs(title="Recreated")
#recreated_vis
grid.arrange(zhou_vis, recreated_vis, nrow = 1)
is.rooted(zhou_tree) #to check to see if the tree is rooted
the_root<-unlist(zhou_tree$tip.label[1:6]) #create a list of the 6 gene names that make up the ant tree ORCO clade
gzoom(zhou_tree, the_root) #visualize the clade called the root
is.rooted(recreated_tree) #to check to see if the tree is rooted
the_root<-unlist(recreated_tree$tip.label[1:6]) #create a list of the 6 gene names that make up the ant tree ORCO clade
gzoom(recreated_tree, the_root) #visualize the clade called the root
ant_clades= vector(mode = "list",length= 23)
names(ant_clades)<-c(
"Clade_A",
"Clade_B",
"Clade_C",
"Clade_D",
"Clade_E",
"Clade_F",
"Clade_G",
"Clade_H",
"Clade_I",
"Clade_J",
"Clade_K",
"Clade_L",
"Clade_M",
"Clade_N",
"Clade_O",
"Clade_P",
"Clade_Q",
"Clade_R",
"Clade_S",
"Clade_T",
"Clade_U",
"Clade_V",
"Clade_9-exon"
)
ant_clades[["Clade_A"]]<- c("PbOr170","LhOr59")
ant_clades[["Clade_B"]]<- c("HsOr188","LhOr210")
ant_clades[["Clade_C"]]<- c("AmOr116", "HsOr219")
ant_clades[["Clade_D"]]<- c("NvOr121PSE", "CfOr262")
ant_clades[["Clade_E"]]<- c("NvOr98","LhOr135")
ant_clades[["Clade_F"]]<- c("AmOr171","NvOr263")
ant_clades[["Clade_G"]]<- c("NvOr45","PbOr195JF")
ant_clades[["Clade_H"]]<- c("NvOr44","PbOr190FIX")
ant_clades[["Clade_I"]]<- c("NvOr296","PbOr145")
ant_clades[["Clade_J"]]<- c("PbOr154","AmOr84")
ant_clades[["Clade_K"]]<- c("AmOr1","PbOr3")
ant_clades[["Clade_L"]]<- c("NvOr8","PbOr12")
ant_clades[["Clade_M"]]<- c("LhOr146","PbOr56FIX")
ant_clades[["Clade_N"]]<- c("NvOr61","LhOr155")
ant_clades[["Clade_O"]]<- c("NvOr60","CfOr52")
ant_clades[["Clade_P"]]<- c("AmOr65","CfOr101")
ant_clades[["Clade_Q"]]<- c("AmOr160","HsOr187")
ant_clades[["Clade_R"]]<- c("HsOr179","LhOr207")
ant_clades[["Clade_S"]]<- c("PbOr149", "NvOr288")
ant_clades[["Clade_T"]]<- c("NvOr25", "HsOr86")
ant_clades[["Clade_U"]]<- c("NvOr38", "LhOr180FN")
ant_clades[["Clade_V"]]<- c("NvOr64","HsOr127")
ant_clades[["Clade_9-exon"]]<-c("LhOr249","PbOr352INT")
get.terminals <- function(node, tree) {
parents <- c(node)
tips <- c()
while (length(parents) > 0) {
for (parent in parents) {
children <- tree$edge[which(tree$edge[,1]==parent),2]
parents <- parents[parents!=parent]
if (length(children) > 0) {
parents <- c(parents, children)
} else {
tips <- c(tips, parent)
}
}
}
return(tips)
}
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
ant_clade_members[[i]]<-sort(clade_siblings(clade_list[[i]],tree_of_interest))
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
View(ant_clade_members)
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
View(ant_clade_members)
View(ant_clade_members)
View(ant_clade_members)
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest)&(clade_list[[i]][2]%in%tree_of_interest)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
print("element not in tree. must add clade manually")
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
"AmOr171" %in% recreated_tree$tip.label
"NvOr263" %in% recreated_tree$tip.label
View(ant_clade_members)
View(ant_clade_members)
View(ant_clade_members)
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
try((clade_list[[i]][1]%in% tree_of_interest)&(clade_list[[i]][2]%in%tree_of_interest)){
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest)&(clade_list[[i]][2]%in%tree_of_interest)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
print("element not in tree. must add clade manually")
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
"AmOr171" %in% recreated_tree$tip.label
"NvOr263" %in% recreated_tree$tip.label
View(ant_clade_members)
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
#if((clade_list[[i]][1]%in% tree_of_interest)&(clade_list[[i]][2]%in%tree_of_interest)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
#}
#else{
#  print("element not in tree. must add clade manually")
#}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
View(ant_clade_members)
View(ant_clade_members)
#ant_clade_members_recreated
ant_clades[[1]][1]
#ant_clade_members_recreated
ant_clades[[1]][1] %in% recreated_tree
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
print("element not in tree. must add clade manually")
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
#ant_clade_members
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
ant_clades[[1]][1] %in% recreated_tree
"AmOr171" %in% recreated_tree$tip.label
"NvOr263" %in% recreated_tree$tip.label
View(ant_clade_members)
View(ant_clade_members_recreated)
names(Ant_clades[6])
names(ant_clades[6])
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
sprintf("element not in tree. must add %s manually",names(ant_clades[i]))
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
ant_clade_members_recreated
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
cat(sprintf("element not in tree. must add %s manually",names(ant_clades[i])))
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_clade_members[[i]]<-clade_siblings(clade_list[[i]],tree_of_interest)
}
else{
cat(sprintf("Element not found tree. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found tree. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
MRCA(recreated_tree,ant_clades[[6]])
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found tree. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
View(MRCAs_recreated)
View(MRCAs)
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found %s. Must add %s manually",tree_of_interest,names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
View(ant_clade_members)
zhou_clade_F<-unlist(zhou_tree$tip.label[ant_clade_members[[6]][1]:ant_clade_members[[6]][length(ant_clade_members[[6]])]])
zhou_clade_F
ant_clades$Clade_F
ant_clades$Clade_F[2]%in%zhou_clade_F
ant_clades$Clade_F[1]%in%zhou_clade_F
clade_siblings<-function(clade_of_interest, tree_of_interest){
temp<-MRCA(tree_of_interest, clade_of_interest)
return(get.terminals(temp,tree_of_interest))
}
get_clade_members<-function(clade_list,tree_of_interest){
ant_clade_members= vector(mode = "list",length= length(clade_list))
names(ant_clade_members)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_clade_members[[i]]<-sort(clade_siblings(clade_list[[i]],tree_of_interest))
}
else{
cat(sprintf("Element not found tree. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_clade_members)
}
ant_clade_members<-get_clade_members(ant_clades,zhou_tree)
ant_clade_members_recreated<-get_clade_members(ant_clades,recreated_tree)
#ant_clade_members_recreated
View(ant_clade_members)
View(ant_clade_members_recreated)
View(ant_clade_members)
View(ant_clade_members)
View(ant_clade_members)
View(ant_clade_members_recreated)
get_MRCA<-function(clade_list,tree_of_interest){
ant_MRCA= vector(mode = "list",length= length(clade_list))
names(ant_MRCA)<-names(clade_list)
for (i in 1:length(names(clade_list))){
if((clade_list[[i]][1]%in% tree_of_interest$tip.label)&(clade_list[[i]][2]%in%tree_of_interest$tip.label)){
ant_MRCA[[i]]<-MRCA(tree_of_interest,clade_list[[i]])
}
else{
cat(sprintf("Element not found. Must add %s manually",names(ant_clades[i])))
}
}
return(ant_MRCA)
}
MRCAs<-get_MRCA(ant_clades,zhou_tree)
MRCAs_recreated<-get_MRCA(ant_clades,recreated_tree)
View(MRCAs_recreated)
View(MRCAs)
View(MRCAs_recreated)
zhou_clade_F
gzoom(zhou_tree,zhou_clade_F)
ant_clades$Clade_F[1]
ant_clades$Clade_F[2]
gzoom(zhou_tree,zhou_clade_F)
ant_clades$Clade_F[1]%in%recreated_tree$tip.label
ant_clades$Clade_F[2] #NVOr263
gzoom(zhou_tree,zhou_clade_F)
knitr::opts_chunk$set(echo = TRUE)
install.packages("flavin")
library(devtools)
install_github("skinnider/flavin")
install_github("skinnider/flavin")
install_github("skinnider/flavin")
